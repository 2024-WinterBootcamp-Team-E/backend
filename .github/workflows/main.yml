name: CI/CD

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 코드 체크아웃
      - uses: actions/checkout@v3

      # 2. 버전 번호 설정 (GitHub Actions의 실행 번호 사용)
      - name: Set Docker Image Tag based on GitHub Run Number
        run: |
          VERSION="v1.0.${{ github.run_number }}"  # run_number를 기반으로 버전 번호 생성
          echo "Docker Image Tag: $VERSION"
          echo "DOCKER_IMAGE_TAG=${VERSION}" >> $GITHUB_ENV

      # 3. Python 설치 및 의존성 설치 (필요한 경우에만 실행)
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 4. Docker Hub 로그인
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 5. Docker Compose 설치 (추가된 단계)
      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      # 6. Docker 이미지 빌드 및 푸시
      - name: Build and push Docker image
        run: |
          echo "Using Docker Image Tag: $DOCKER_IMAGE_TAG"
          docker build -t ${{ secrets.DOCKER_USERNAME }}/fastapi-app:$DOCKER_IMAGE_TAG .
          docker push ${{ secrets.DOCKER_USERNAME }}/fastapi-app:$DOCKER_IMAGE_TAG
    
      # 7. 서버에 배포
      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            echo "Starting deployment process..."

            # 코드 저장소에서 서버로 최신 코드 다운로드
            cd /path/to/deployment

            # Docker Compose 파일에서 이미지를 최신 태그로 업데이트
            sed -i "s|image:.*|image: ${{ secrets.DOCKER_USERNAME }}/fastapi-app:${{ env.DOCKER_IMAGE_TAG }}|" docker-compose.yml

            # 기존 컨테이너 중지 및 제거
            docker-compose down || true

            # 최신 이미지 다운로드
            docker-compose pull

            # 컨테이너 실행
            docker-compose up -d
            echo "Deployment complete."
