name: CI/CD

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 코드 체크아웃
      - uses: actions/checkout@v3

      # 2. 버전 번호 설정 (GitHub Actions의 실행 번호 사용)
      - name: Set Docker Image Tag based on GitHub Run Number
        run: |
          VERSION="v1.0.${{ github.run_number }}"  # run_number를 기반으로 버전 번호 생성
          echo "Docker Image Tag: $VERSION"
          echo "DOCKER_IMAGE_TAG=${VERSION}" >> $GITHUB_ENV

      # 3. Docker 이미지 빌드 및 푸시
      - name: Build and push Docker image
        run: |
          DOCKER_IMAGE_TAG=${{ env.DOCKER_IMAGE_TAG }}
          echo "Using Docker Image Tag: $DOCKER_IMAGE_TAG"
          docker build -t ${{ secrets.DOCKER_USERNAME }}/fastapi-app:$DOCKER_IMAGE_TAG .
          docker push ${{ secrets.DOCKER_USERNAME }}/fastapi-app:$DOCKER_IMAGE_TAG

      # 4. 배포
      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/fastapi-app
            TAG=${{ env.DOCKER_IMAGE_TAG }}
            
            echo "Deploying Docker image: $IMAGE_NAME:$TAG"
            
            # 기존 컨테이너 중지 및 제거
            docker pull $IMAGE_NAME:$TAG
            docker stop fastapi || true
            docker rm fastapi || true
            
            # 새 컨테이너 실행
            docker run -d --name fastapi -p 8000:8000 $IMAGE_NAME:$TAG
